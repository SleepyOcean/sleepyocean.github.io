(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{544:function(_,v,t){"use strict";t.r(v);var i=t(42),e=Object(i.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h2",{attrs:{id:"_1-数据结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据结构"}},[_._v("#")]),_._v(" 1. 数据结构")]),_._v(" "),t("p",[t("strong",[_._v("一维")])]),_._v(" "),t("ul",[t("li",[_._v("基础：数组 array（string），链表 linked list")]),_._v(" "),t("li",[_._v("高级：栈 stack，队列 queue，双端队列 deque，集合 set，映射 map（hash or map），etc")])]),_._v(" "),t("p",[t("strong",[_._v("二维")])]),_._v(" "),t("ul",[t("li",[_._v("基础：树 tree，图 graph")]),_._v(" "),t("li",[_._v("高级：二叉搜索树 binary search tree（red-black tree，AVL），堆 heap，并查集 disjoint set，字典树 Trie，etc")])]),_._v(" "),t("p",[t("strong",[_._v("特殊")])]),_._v(" "),t("ul",[t("li",[_._v("位运算 Bitwise，布隆过滤器 BloomFilter")]),_._v(" "),t("li",[_._v("LRU Cache")])]),_._v(" "),t("h2",{attrs:{id:"_2-算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-算法"}},[_._v("#")]),_._v(" 2. 算法")]),_._v(" "),t("p",[t("strong",[_._v("基础")])]),_._v(" "),t("ul",[t("li",[_._v("条件判断：if-else, switch -> branch")]),_._v(" "),t("li",[_._v("迭代循环：for, while loop -> iteration")]),_._v(" "),t("li",[_._v("递归：Recursion(Divide & Conquer, Backtrace)")])]),_._v(" "),t("p",[t("strong",[_._v("高级")])]),_._v(" "),t("ul",[t("li",[_._v("搜索 Search：深度优先搜索 Depth first search，广度优先搜索 Breadth first search，A*，etc")]),_._v(" "),t("li",[_._v("动态规划 Dynamic Programming")]),_._v(" "),t("li",[_._v("二分查找 Binary Search")]),_._v(" "),t("li",[_._v("贪心 Greedy")]),_._v(" "),t("li",[_._v("数学 Math，几何 Geometry")])]),_._v(" "),t("h2",{attrs:{id:"_3-方法论"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-方法论"}},[_._v("#")]),_._v(" 3. 方法论")]),_._v(" "),t("p",[t("strong",[_._v("职业训练")])]),_._v(" "),t("ul",[t("li",[_._v("拆分知识点")]),_._v(" "),t("li",[_._v("刻意练习")]),_._v(" "),t("li",[_._v("反馈")])]),_._v(" "),t("p",[t("strong",[_._v("切题四件套")])]),_._v(" "),t("ul",[t("li",[_._v("Clarification 明确题目")]),_._v(" "),t("li",[_._v("Possible solutions 寻求多种解法，找出最优解\n"),t("ul",[t("li",[_._v("compare（time/space）比较")]),_._v(" "),t("li",[_._v("optimal 优化")])])]),_._v(" "),t("li",[_._v("Coding 刻意练习")]),_._v(" "),t("li",[_._v("Test cases 测试用例，有始有终")])]),_._v(" "),t("p",[t("strong",[_._v("五毒神掌")])]),_._v(" "),t("p",[_._v("第一遍")]),_._v(" "),t("ul",[t("li",[_._v("5分钟：读题 + 思考")]),_._v(" "),t("li",[_._v("直接看解法：注意！多解法，比较解法优劣")]),_._v(" "),t("li",[_._v("背诵、默写好的解法")])]),_._v(" "),t("p",[_._v("第二遍")]),_._v(" "),t("ul",[t("li",[_._v("马上自己写 -> LeetCode提交")]),_._v(" "),t("li",[_._v("多种解法比较、体会 -> 优化！")])]),_._v(" "),t("p",[_._v("第三遍")]),_._v(" "),t("ul",[t("li",[_._v("过一天后，再重复做题")]),_._v(" "),t("li",[_._v("不同解法的熟练程度 -> 专项练习")])]),_._v(" "),t("p",[_._v("第四遍")]),_._v(" "),t("ul",[t("li",[_._v("过了一周，反复回来练习相同题目")])]),_._v(" "),t("p",[_._v("第五遍")]),_._v(" "),t("ul",[t("li",[_._v("面试前一周恢复性训练")])]),_._v(" "),t("p",[_._v("第三遍的时候就可以看一看leetcode国际站的Discuss中Most Vote前三回答，学习先进思路，会有很大帮助")]),_._v(" "),t("h2",{attrs:{id:"_4-时间和空间复杂性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-时间和空间复杂性"}},[_._v("#")]),_._v(" 4. 时间和空间复杂性")]),_._v(" "),t("p",[t("strong",[_._v("时间复杂度： Big O notation")])]),_._v(" "),t("ul",[t("li",[_._v("O(1): Constant Complexity 常数")]),_._v(" "),t("li",[_._v("O(log n): Logarithmic Complexity 对数")]),_._v(" "),t("li",[_._v("O(n): Linear Complexity 线性")]),_._v(" "),t("li",[_._v("O(n^2): N square Complexity 平方")]),_._v(" "),t("li",[_._v("O(n^3): N square Complexity 立方")]),_._v(" "),t("li",[_._v("O(2^n): Exponential Growth 指数")]),_._v(" "),t("li",[_._v("O(n!): Factorial 阶乘")])]),_._v(" "),t("p",[_._v("注意： 只看最高复杂度的运算")]),_._v(" "),t("p",[_._v("复杂度分析方式：Master Theorem 主定理")]),_._v(" "),t("h2",{attrs:{id:"_5-解决思想"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-解决思想"}},[_._v("#")]),_._v(" 5. 解决思想")]),_._v(" "),t("p",[_._v("核心思想： 升维 和 空间换时间")]),_._v(" "),t("p",[t("strong",[_._v("解题思路")])]),_._v(" "),t("ul",[t("li",[_._v("最近子问题")])])])}),[],!1,null,null,null);v.default=e.exports}}]);