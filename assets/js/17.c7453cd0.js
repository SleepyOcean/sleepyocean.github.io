(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{540:function(t,s,a){"use strict";a.r(s);var r=a(42),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"一、定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、定义"}},[t._v("#")]),t._v(" 一、定义")]),t._v(" "),a("p",[t._v("动态规划算法是通过拆分问题，定义问题状态和状态之间的关系，使得问题能够以递推（或者说分治）的方式去解决。\n动态规划算法的基本思想与分治法类似，也是将待求解的问题分解为若干个子问题（阶段），按顺序求解子阶段，前一子问题的解，为后一子问题的求解提供了有用的信息。在求解任一子问题时，列出各种可能的局部解，通过决策保留那些有可能达到最优的局部解，丢弃其他局部解。依次解决各子问题，最后一个子问题就是初始问题的解。")]),t._v(" "),a("h3",{attrs:{id:"_1-1-初步理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-初步理解"}},[t._v("#")]),t._v(" 1.1 初步理解")]),t._v(" "),a("p",[t._v("首先是"),a("strong",[t._v("拆分问题")]),t._v("，")])])}),[],!1,null,null,null);s.default=e.exports}}]);